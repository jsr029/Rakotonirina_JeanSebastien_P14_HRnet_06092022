{"version":3,"file":"static/js/720.04f1613a.chunk.js","mappings":"yNAsBA,MAnBA,YAAkC,IAAbA,EAAY,EAAZA,SACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,OACI,iBAAMC,UAAU,YAAYC,SALX,SAAAC,GACjBA,EAAEC,iBACFP,EAASE,EACZ,EAEG,UACI,kBACCM,YAAY,sCACTC,KAAK,OACLL,UAAU,iBACVM,MAAOR,EACPS,SAAU,SAACL,GAAD,OAAOH,EAAcG,EAAEM,OAAOF,MAA9B,KAIzB,E,UCoFD,MAhGA,WACI,IAAMG,GAAiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAV,IAA4BC,KAuB9DC,EAAU,CACZ,CACIC,KAAM,YACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,SAAR,EACbC,UAAU,GAEd,CACIJ,KAAM,WACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIG,QAAR,EACbD,UAAU,GAEd,CACIJ,KAAM,aACNC,SAAU,SAAAC,GAAG,OAAIA,EAAII,SAAR,EACbC,OAAQ,SAACL,GAAD,OAASM,IAAON,EAAII,WAAWC,OAAO,aAAtC,EACRH,UAAU,GAEd,CACIJ,KAAM,aACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIO,YAAYlB,KAApB,EACba,UAAU,GAEd,CACIJ,KAAM,gBACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIQ,WAAR,EACbH,OAAQ,SAACL,GAAD,OAASM,IAAON,EAAIQ,aAAaH,OAAO,aAAxC,EACRH,UAAU,GAEd,CACIJ,KAAM,SACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIS,MAAR,EACbP,UAAU,GAEd,CACIJ,KAAM,OACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIU,IAAR,EACbR,UAAU,GAEd,CACIJ,KAAM,QACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIW,MAAMtB,KAAd,EACba,UAAU,GAEd,CACIJ,KAAM,WACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIY,OAAR,EACbV,UAAU,IAIlB,GAAkCtB,EAAAA,EAAAA,UAASY,GAA3C,eAAOqB,EAAP,KAAkBC,EAAlB,KACA,GAAsClC,EAAAA,EAAAA,UAAS,IAA/C,eAAOmC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EA5Ec,SAAAH,GACpB,MAAoB,KAAhBA,EACOvB,EAEJA,EAAe2B,QAAO,SAAAC,GAUzB,OARSA,EAASnB,UAAUoB,cAAcC,SAASP,EAAYM,gBAC/DD,EAASjB,SAASkB,cAAcC,SAASP,EAAYM,gBACrDD,EAASX,OAAOY,cAAcC,SAASP,EAAYM,gBACnDD,EAASV,KAAKW,cAAcC,SAASP,EAAYM,gBACjDD,EAASb,YAAYlB,MAAMgC,cAAcC,SAASP,EAAYM,gBAC9DD,EAAST,MAAMtB,MAAMgC,cAAcC,SAASP,EAAYM,gBACxDD,EAASZ,YAAYc,SAASP,IAC9BK,EAASR,QAAQS,cAAcC,SAASP,EAAYM,cAEvD,GAEJ,CA2D6BE,CAAgBR,GAC1CD,EAAaI,EAChB,GAAE,CAACH,KAEA,iCACI,oCAAe,SAAC,EAAD,CAAWpC,SAAU,SAACoC,GAAD,OAAiBC,EAAeD,EAAhC,KACpC,gBAAKhC,UAAU,MAAf,UACI,SAAC,KAAD,CACIc,QAASA,EACTD,KAAMiB,EACNW,YAAU,EACVC,WAAS,QAK5B,ECtFD,MAZA,WACE,OACE,iCACE,iBAAK1C,UAAU,YAAf,WACE,+CACA,SAAC,EAAD,QAEF,SAAC,KAAD,CAAM2C,GAAG,IAAT,oBAGL,C","sources":["components/SerachBar/index.jsx","components/TableEmployees/index.jsx","pages/ViewCurrentEmployees.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n/** gets the callback by props just like function */\r\nfunction SearchBar({ callback }) {\r\n    const [innerValue, setInnerValue] = useState('')\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        callback(innerValue)\r\n    }\r\n    return (\r\n        <form className='searchBar' onSubmit={handleSubmit}>\r\n            <input\r\n             placeholder=\"Type word or not and press enter...\"\r\n                type=\"text\"\r\n                className='searchBarInput'\r\n                value={innerValue}\r\n                onChange={(e) => setInnerValue(e.target.value)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React, { useState } from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\n//import EmployeeTable from \"../EmployeeTable\";\r\nimport moment from \"moment-jalaali\";\r\nimport SearchBar from \"../SerachBar\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TableEmployees() {\r\n    const employeesStore = useSelector(state => state.employeesReducer).data\r\n    const filterEmployees = searchValue => {\r\n        if (searchValue === '') {\r\n            return employeesStore\r\n        }\r\n        return employeesStore.filter(employee => { \r\n            let result = false\r\n            result = employee.firstname.toLowerCase().includes(searchValue.toLowerCase()) || \r\n            employee.lastname.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            employee.street.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            employee.city.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            employee.Departement.value.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            employee.State.value.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            employee.dateofbirth.includes(searchValue) ||\r\n            employee.zipcode.toLowerCase().includes(searchValue.toLowerCase())\r\n            return result\r\n        })\r\n        // employee.firstname.toLowerCase().includes(searchValue.toLowerCase()))\r\n    }\r\n    /* \r\n      - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to memoize the columns data\r\n      - Here in this example, we have grouped our columns into two names. react-table is flexible enough to create grouped table names\r\n    */\r\n    const columns = [\r\n        {\r\n            name: \"Firstname\",\r\n            selector: row => row.firstname,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Lastname\",\r\n            selector: row => row.lastname,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Start Date\",\r\n            selector: row => row.startdate,\r\n            format: (row) => moment(row.startdate).format('DD/MM/YYYY'),\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Department\",\r\n            selector: row => row.Departement.value,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Date of Birth\",\r\n            selector: row => row.dateofbirth,\r\n            format: (row) => moment(row.dateofbirth).format('DD/MM/YYYY'),\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Street\",\r\n            selector: row => row.street,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"City\",\r\n            selector: row => row.city,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"State\",\r\n            selector: row => row.State.value,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Zip Code\",\r\n            selector: row => row.zipcode,\r\n            sortable: true\r\n        }\r\n\r\n    ]\r\n    const [employees, setEmployees] = useState(employeesStore)\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        const filteredEmployees = filterEmployees(searchValue)\r\n        setEmployees(filteredEmployees)\r\n    }, [searchValue])\r\n    return (\r\n        <>\r\n            <h2>Search</h2><SearchBar callback={(searchValue) => setSearchValue(searchValue)} />\r\n            <div className=\"App\">\r\n                <DataTable\r\n                    columns={columns}\r\n                    data={employees}\r\n                    pagination\r\n                    subHeader\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableEmployees","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TableEmployees from '../components/TableEmployees'\r\n\r\nfunction ViewCurrentEmployees() {\r\n  return (\r\n    <>\r\n      <div className='employees'>\r\n        <h1>Current Employees</h1>\r\n        <TableEmployees />\r\n      </div>\r\n      <Link to=\"/\">Home</Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewCurrentEmployees"],"names":["callback","useState","innerValue","setInnerValue","className","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","employeesStore","useSelector","state","employeesReducer","data","columns","name","selector","row","firstname","sortable","lastname","startdate","format","moment","Departement","dateofbirth","street","city","State","zipcode","employees","setEmployees","searchValue","setSearchValue","useEffect","filteredEmployees","filter","employee","toLowerCase","includes","filterEmployees","pagination","subHeader","to"],"sourceRoot":""}